#!/usr/bin/env bash

# smartless - a pager similar to less, but smarter
#
# works like the pager 'less', but does not enter the pager mode if the
# document is short
# inspired by code at http://unix.stackexchange.com/questions/107315/

# ------------------------------------------------------------------------------

# Copyright 2015 Stefan Heule
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ------------------------------------------------------------------------------

# number of lines to directly display before entering  the pager
if [ -z "${SMARTLESS_NUM_LINES}" ] ; then
    # default to of the the screen height, if it can be discovered
    SMARTLESS_NUM_LINES="$(tput lines)"
    SMARTLESS_NUM_LINES="${SMARTLESS_NUM_LINES:+$(( SMARTLESS_NUM_LINES / 2 ))}"
    # fall back to 15 lines
    SMARTLESS_NUM_LINES="${SMARTLESS_NUM_LINES:-15}"
fi

# the pager to be used
[ -z "$SMARTLESS_PAGER" ] && SMARTLESS_PAGER='less'

# the default arguments to the pager
[ -z "$SMARTLESS_PAGER_ARGUMENTS" ] && SMARTLESS_PAGER_ARGUMENTS='-iR'

# if a file name is passed, read it
isfile=0
file=""
args=""
nextisarg=0
for var in "$@"; do
  if (( $nextisarg == 1 )); then
    nextisarg=0
    args="$args $var"
    continue
  fi
  # ignore less arguments
  if [[ ! $var = -* ]] && [[ ! $var = +* ]]; then
    isfile=1
    file=$var
  else
    if [[ $var == "-b" ]] ||
       [[ $var == "-h" ]] ||
       [[ $var == "-j" ]] ||
       [[ $var == "-k" ]] ||
       [[ $var == "-o" ]] ||
       [[ $var == "-O" ]] ||
       [[ $var == "-p" ]] ||
       [[ $var == "-P" ]] ||
       [[ $var == "-t" ]] ||
       [[ $var == "-T" ]] ||
       [[ $var == "-x" ]] ||
       [[ $var == "-y" ]] ||
       [[ $var == "-z" ]] ||
       [[ $var == "-#" ]]; then
      nextisarg=1
    fi
    args="$args $var"
  fi
done
if (( $isfile == 1 )); then
  # cat file, and pass remaining arguments to myself
  me=$(cd `dirname "${BASH_SOURCE[0]}"` && pwd)/`basename "${BASH_SOURCE[0]}"`
  cat "$file" | $me $args
  exit $?
fi

# number of lines to show before switching to less
nlines=$SMARTLESS_NUM_LINES

n=0
lines=
newline='
'

# read and display enough lines to fill most of the terminal (nlines many lines)
while [ $n -lt $nlines ] && IFS= read -r line; do
  if [[ $n -eq 0 ]]; then
    lines="$line"
  else
    lines="$lines$newline$line"
  fi
  printf '%s\n' "$line" 1>&2
  n=$((n + 1))
done

# if the input is longer, run the pager
if IFS= read -r line; then
  echo -e "\n\033[38;5;2m... (more shown in $SMARTLESS_PAGER)\033[0m" 1>&2
  { printf '%s\n%s\n' "$lines" "$line"; exec cat; } | exec $SMARTLESS_PAGER $SMARTLESS_PAGER_ARGUMENTS "$@"
fi
